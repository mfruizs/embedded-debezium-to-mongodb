version: '2'
services:

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    network_mode: bridge
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    links:
      - zookeeper
    container_name: kafka
    ports:
      - '9092:9092'
    network_mode: bridge
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ## MongoDB single node replica-set
  mongo:
    image: 'mongo:5'
    command:
      - '--replSet'
      - my-replica-set
      - '--bind_ip_all'
      - '--port'
      - '30001'
    volumes:
      - './data/mongo-1:/data/db'
    ports:
      - '30001:30001'
    healthcheck:
      test: 'test $$(echo "rs.initiate({_id:''my-replica-set'',members:[{_id:0,host:\"mongo:30001\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1'
      interval: 10s
      start_period: 30s

